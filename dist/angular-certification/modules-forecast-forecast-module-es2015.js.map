{"version":3,"sources":["./src/app/modules/forecast/forecast.module.ts","./src/app/modules/forecast/services/forecast.service.ts","./src/app/modules/forecast/components/five-day-forecast/five-day-forecast.component.ts","./src/app/modules/forecast/components/five-day-forecast/five-day-forecast.component.html","./src/app/modules/forecast/guards/can-activate.guard.ts","./src/app/modules/forecast/forecast-routing.module.ts"],"names":[],"mappings":"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","file":"modules-forecast-forecast-module-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {FiveDayForecastComponent} from './components/five-day-forecast/five-day-forecast.component';\nimport {ForecastRoutingModule} from \"./forecast-routing.module\";\nimport {SharedModule} from \"@shared/shared.module\";\nimport {ForecastService} from \"./services/forecast.service\";\nimport {CanActivateGuard} from \"./guards/can-activate.guard\";\n\n\n@NgModule({\n    declarations: [FiveDayForecastComponent],\n    imports: [\n        SharedModule,\n        ForecastRoutingModule\n    ], providers: [ForecastService, CanActivateGuard]\n})\nexport class ForecastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@environments/environment\";\nimport {Observable, of} from \"rxjs\";\nimport {FullWeatherDTO, LocationDTO} from \"@shared/models\";\nimport {catchError, filter, map} from \"rxjs/operators\";\nimport {$enum} from \"ts-enum-util\";\nimport {SkyStatusEnum} from \"@shared/enums/sky-condiction.enum\";\nimport {ForecastDTO} from \"../models/forecast\";\nimport {CityDTO} from \"@shared/models/city\";\n\n@Injectable()\nexport class ForecastService {\n\n    private readonly apiUrl: string;\n\n    constructor(private readonly http: HttpClient) {\n        this.apiUrl = environment.API_URL;\n    }\n\n    getFiveDayForecastByZipCode(zipCode: string): Observable<LocationDTO[]> {\n        return this.http.get<ForecastDTO>(`${this.apiUrl}/forecast/daily`, {\n            params: {\n                cnt: environment.NUMBER_OF_DAYS.toString(),\n                zip: zipCode,\n                appid: environment.API_KEY\n            }\n        })\n            .pipe(\n                filter(({list}) => !!list.length),\n                map(({list, city}) => this.mapToLocationDTO(list, city)),\n                catchError(() => of([]))\n            );\n    }\n\n    private mapToLocationDTO = (list: FullWeatherDTO[], city: CityDTO) =>\n        list.map((w: FullWeatherDTO) => ({\n            name: city.name,\n            skyCondiction: $enum(SkyStatusEnum).asValueOrDefault(w.weather[0].main.toLowerCase(), SkyStatusEnum.DEFAuLT),\n            minTemp: w.temp.min,\n            maxTemp: w.temp.max,\n            date: w.dt,\n        })) as unknown as LocationDTO[];\n}\n","import {Component} from '@angular/core';\nimport {ForecastService} from \"../../services/forecast.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {filter, switchMap, tap} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {LocationDTO} from \"@shared/models\";\n\n@Component({\n    selector: 'app-five-day-forecast',\n    templateUrl: './five-day-forecast.component.html',\n    styleUrls: ['./five-day-forecast.component.css']\n})\nexport class FiveDayForecastComponent {\n\n    locations$: Observable<LocationDTO[]> = this.route.params.pipe(\n        filter(params => !!params.zipCode),\n        switchMap(params => this.forecastService.getFiveDayForecastByZipCode(params.zipCode))\n    );\n\n    constructor(\n        private readonly forecastService: ForecastService,\n        private readonly route: ActivatedRoute) {\n    }\n}\n","<h4 class=\"container\">Template for 5-day forecast page:</h4>\n<div class=\"container-fluid container\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">5-day forecast for Rancho Cordova</h3>\n\n        </div>\n        <ul class=\"list-group\">\n\n            <li class=\"list-group-item\" *ngFor='let location of locations$ | async'>\n                {{ location.date | convertDate }}:\n                {{ location.skyCondiction | titlecase }}\n                - Min: {{ location.minTemp | number : '1.0-0' }}\n                - Max: {{ location.maxTemp | number : '1.0-0' }}\n                <app-weather-icon [icon]=\"true\" [skyCondition]=\"location.skyCondiction | weatherStatus\">\n                </app-weather-icon>\n            </li>\n        </ul>\n    </div>\n    <br>\n    <button [routerLink]=\"['/']\" class=\"btn btn-success\">\n        <i class=\"fa fa-arrow-left fa-arrow\"></i>\n        Back to main page\n    </button>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router} from '@angular/router';\r\nimport {WeatherService} from \"@app/services\";\r\n\r\n@Injectable()\r\nexport class CanActivateGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private readonly weatherService: WeatherService,\r\n        private readonly router: Router\r\n    ) {\r\n    }\r\n\r\n    async canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\r\n        if (this.weatherService.getZipCodesValue.includes(route.paramMap.get('zipCode'))) {\r\n            return true\r\n        } else {\r\n            await this.router.navigate(['/']);\r\n            return false\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {FiveDayForecastComponent} from \"./components/five-day-forecast/five-day-forecast.component\";\r\nimport {CanActivateGuard} from \"./guards/can-activate.guard\";\r\n\r\nconst routes: Routes = [\r\n    {path: '', pathMatch: 'full', redirectTo: '/'},\r\n    {path: ':zipCode', component: FiveDayForecastComponent, canActivate: [CanActivateGuard]}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ForecastRoutingModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}