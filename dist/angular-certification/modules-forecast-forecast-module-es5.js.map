{"version":3,"sources":["webpack:///src/app/modules/forecast/forecast.module.ts","webpack:///src/app/modules/forecast/services/forecast.service.ts","webpack:///src/app/modules/forecast/components/five-day-forecast/five-day-forecast.component.ts","webpack:///src/app/modules/forecast/components/five-day-forecast/five-day-forecast.component.html","webpack:///src/app/modules/forecast/guards/can-activate.guard.ts","webpack:///src/app/modules/forecast/forecast-routing.module.ts"],"names":["ForecastModule","declarations","imports","providers","ForecastService","http","mapToLocationDTO","list","city","map","w","name","skyCondiction","asValueOrDefault","weather","main","toLowerCase","DEFAuLT","minTemp","temp","min","maxTemp","max","date","dt","apiUrl","API_URL","zipCode","url","NUMBER_OF_DAYS","API_KEY","get","pipe","length","FiveDayForecastComponent","forecastService","route","locations$","params","id","getFiveDayForecastByZipCode","selector","templateUrl","styleUrls","CanActivateGuard","weatherService","router","getZipCodesValue","includes","paramMap","navigate","routes","path","pathMatch","redirectTo","component","canActivate","ForecastRoutingModule","forChild","exports"],"mappings":"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","file":"modules-forecast-forecast-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {FiveDayForecastComponent} from './components/five-day-forecast/five-day-forecast.component';\nimport {ForecastRoutingModule} from \"./forecast-routing.module\";\nimport {SharedModule} from \"@shared/shared.module\";\nimport {ForecastService} from \"./services/forecast.service\";\nimport {CanActivateGuard} from \"./guards/can-activate.guard\";\n\n\n@NgModule({\n    declarations: [FiveDayForecastComponent],\n    imports: [\n        SharedModule,\n        ForecastRoutingModule\n    ], providers: [ForecastService, CanActivateGuard]\n})\nexport class ForecastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@environments/environment\";\nimport {Observable, of} from \"rxjs\";\nimport {FullWeatherDTO, LocationDTO} from \"@shared/models\";\nimport {catchError, filter, map} from \"rxjs/operators\";\nimport {$enum} from \"ts-enum-util\";\nimport {SkyStatusEnum} from \"@shared/enums/sky-condiction.enum\";\nimport {ForecastDTO} from \"../models/forecast\";\nimport {CityDTO} from \"@shared/models/city\";\n\n@Injectable()\nexport class ForecastService {\n\n    private readonly apiUrl: string;\n\n    constructor(private readonly http: HttpClient) {\n        this.apiUrl = environment.API_URL;\n    }\n\n    getFiveDayForecastByZipCode(zipCode: string): Observable<LocationDTO[]> {\n        const url = `${this.apiUrl}forecast/daily?cnt=${environment.NUMBER_OF_DAYS}&zip=${zipCode},us&appid=${environment.API_KEY}`;\n        return this.http.get<ForecastDTO>(url)\n            .pipe(\n                filter(({list}) => !!list.length),\n                map(({list, city}) => this.mapToLocationDTO(list, city)),\n                catchError(() => of([]))\n            );\n    }\n\n    private mapToLocationDTO = (list: FullWeatherDTO[], city: CityDTO) =>\n        list.map((w: FullWeatherDTO) => ({\n            name: city.name,\n            skyCondiction: $enum(SkyStatusEnum).asValueOrDefault(w.weather[0].main.toLowerCase(), SkyStatusEnum.DEFAuLT),\n            minTemp: w.temp.min,\n            maxTemp: w.temp.max,\n            date: w.dt,\n        })) as unknown as LocationDTO[];\n}\n","import {Component} from '@angular/core';\nimport {ForecastService} from \"../../services/forecast.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {filter, switchMap} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {LocationDTO} from \"@shared/models\";\n\n@Component({\n    selector: 'app-five-day-forecast',\n    templateUrl: './five-day-forecast.component.html',\n    styleUrls: ['./five-day-forecast.component.css']\n})\nexport class FiveDayForecastComponent {\n\n    locations$: Observable<LocationDTO[]> = this.route.params.pipe(\n        filter(params => !!params.id),\n        switchMap(params => this.forecastService.getFiveDayForecastByZipCode(params.id))\n    );\n\n    constructor(\n        private readonly forecastService: ForecastService,\n        private readonly route: ActivatedRoute) {\n    }\n}\n","<h4 class=\"container\">Template for 5-day forecast page:</h4>\n<div class=\"container-fluid container\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">5-day forecast for Rancho Cordova</h3>\n\n        </div>\n        <ul class=\"list-group\">\n\n            <li class=\"list-group-item\" *ngFor='let location of locations$ | async'>\n                {{ location.date | convertDate }}:\n                {{ location.skyCondiction | titlecase }}\n                - Min: {{ location.minTemp | number : '1.0-0' }}\n                - Max: {{ location.maxTemp | number : '1.0-0' }}\n                <app-weather-icon [icon]=\"true\" [skyCondition]=\"location.skyCondiction | weatherStatus\">\n                </app-weather-icon>\n            </li>\n        </ul>\n    </div>\n    <br>\n    <button [routerLink]=\"['/']\" class=\"btn btn-success\">\n        <i class=\"fa fa-arrow-left fa-arrow\"></i>\n        Back to main page\n    </button>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router} from '@angular/router';\r\nimport {WeatherService} from \"@app/services\";\r\n\r\n@Injectable()\r\nexport class CanActivateGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private readonly weatherService: WeatherService,\r\n        private readonly router: Router\r\n    ) {\r\n    }\r\n\r\n    async canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\r\n        if (this.weatherService.getZipCodesValue.includes(route.paramMap.get('id'))) {\r\n            return true\r\n        } else {\r\n            await this.router.navigate(['/']);\r\n            return false\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {FiveDayForecastComponent} from \"./components/five-day-forecast/five-day-forecast.component\";\r\nimport {CanActivateGuard} from \"./guards/can-activate.guard\";\r\n\r\nconst routes: Routes = [\r\n    {path: '', pathMatch: 'full', redirectTo: '/'},\r\n    {path: ':id', component: FiveDayForecastComponent, canActivate: [CanActivateGuard]}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ForecastRoutingModule {\r\n}\r\n"]}