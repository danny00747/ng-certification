{"version":3,"sources":["webpack:///src/app/core/guards/can-load.guard.ts","webpack:///src/app/core/components/add-location/add-location.component.ts","webpack:///src/app/core/components/add-location/add-location.component.html","webpack:///src/app/core/components/list-location/list-location.component.ts","webpack:///src/app/core/components/list-location/list-location.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/core/classes/cache.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/core/interceptors/loading.interceptor.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/core/services/loading.service.ts","webpack:///src/app/core/services/weather.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/shared/components/weather-icon/weather-icon.component.ts","webpack:///src/app/shared/components/weather-icon/weather-icon.component.html","webpack:///src/app/core/services/index.ts","webpack:///src/app/core/components/list-location/location/location.component.ts","webpack:///src/app/core/components/list-location/location/location.component.html","webpack:///src/app/shared/pipes/weather-status.pipe.ts","webpack:///src/app/shared/pipes/valid-zip-code.pipe.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/shared/enums/sky-condiction.enum.ts"],"names":["CanLoadGuard","weatherService","router","getZipCodesValue","length","navigate","AddLocationComponent","loadingService","zipCodeNotFound$","getZipCodeNotFound","loading$","isLoading","zipCodeForm","addZipCode","value","zipCode","reset","getLocationByZipCode","onSubmit","selector","templateUrl","styleUrls","ListLocationComponent","zipCodes$","getZipCodes","environment","production","API_URL","API_KEY","ICON_URL","NUMBER_OF_DAYS","CacheService","key","localStorage","getItem","data","setItem","JSON","stringify","removeItem","clear","SharedModule","declarations","imports","exports","LoadingInterceptor","req","next","start","handle","pipe","stop","AppComponent","name","LoadingService","isLoading$","requests","asObservable","push","splice","indexOf","WeatherService","http","localStoragekey","apiUrl","cachedZipCodes","split","zipcode","toString","error","url","get","weather","main","skyCondiction","asValueOrDefault","toLocaleLowerCase","DEFAuLT","currentTemp","temp","minTemp","temp_min","maxTemp","temp_max","AppModule","bootstrap","WeatherIconComponent","imageSrc","skyCondition","icon","LocationComponent","subscribe","setZipCodeNotFound","message","setTimeout","t","console","log","removeZipCode","WeatherStatusPipe","SUN","RAIN","CLOUDS","SNOW","CLEAR","ValidZipCodePipe","checkDuplicateZipCode","CoreModule","provide","useClass","multi","providers","routes","path","pathMatch","component","loadChildren","then","m","ForecastModule","canLoad","redirectTo","AppRoutingModule","forRoot","bootstrapModule","err","webpackEmptyAsyncContext","Promise","resolve","e","Error","code","keys","module","id","SkyStatusEnum"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {CanLoad, Router} from '@angular/router';\r\nimport {WeatherService} from \"@app/services\";\r\n\r\n@Injectable()\r\nexport class CanLoadGuard implements CanLoad {\r\n\r\n    constructor(\r\n        private readonly weatherService: WeatherService,\r\n        private readonly router: Router\r\n    ) {\r\n    }\r\n\r\n\r\n    async canLoad(): Promise<boolean> {\r\n        if (this.weatherService.getZipCodesValue.length > 0) {\r\n            return true\r\n        } else {\r\n            await this.router.navigate(['/']);\r\n            return false\r\n        }\r\n    }\r\n}\r\n","import {AfterContentInit, Component, OnInit} from '@angular/core';\nimport {NgForm} from \"@angular/forms\";\nimport {LoadingService, WeatherService} from \"@app/services\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n    selector: 'app-add-location',\n    templateUrl: './add-location.component.html',\n    styleUrls: ['./add-location.component.css']\n})\nexport class AddLocationComponent implements OnInit {\n\n    zipCode: string;\n    zipCodeNotFound$ = this.weatherService.getZipCodeNotFound;\n    loading$ =  this.loadingService.isLoading;\n\n    constructor(private readonly weatherService: WeatherService, private readonly loadingService: LoadingService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onSubmit(zipCodeForm: NgForm): void {\n        this.weatherService.addZipCode(zipCodeForm.value.zipCode);\n        zipCodeForm.reset();\n        this.weatherService.getLocationByZipCode(zipCodeForm.value.zipCode);\n    }\n}\n","<div class=\" container\">\n    <div class=\"card\">\n        <div class=\"card-header font-weight-bold\">\n            Enter a zipcode:\n        </div>\n        <div class=\"card-body\">\n            <form #zipCodeForm=\"ngForm\" (submit)=\"onSubmit(zipCodeForm)\">\n                <input #zipCodeInput=\"ngModel\"\n                       [class.is-invalid]=\"zipCodeInput.invalid && zipCodeInput.touched\"\n                       [class.is-valid]=\"!(zipCodeInput.invalid && zipCodeInput.untouched)\"\n                       pattern=\"^[0-9]*$\"\n                       class=\"form-control\" name=\"zipCode\" type=\"text\" id=\"addLocation\"\n                       [(ngModel)]=\"zipCode\" minlength=\"5\" maxlength=\"5\"\n                       placeholder=\"zipCode\" required>\n                <div *ngIf=\"zipCodeInput.errors && (zipCodeInput.invalid || zipCodeInput.touched)\">\n                    <small id=\"zipCodeError2\" class=\"text-danger\"\n                           *ngIf=\"zipCodeInput.errors.pattern || zipCodeInput.errors.minlength\">\n                        {{zipCodeInput.value}} is not a valid zipcode\n                    </small>\n                    <small id=\"zipCodeError3\" class=\"text-danger\"\n                           *ngIf=\"zipCodeInput.errors.required && zipCodeInput.touched\">\n                        A zipcode is required\n                    </small>\n\n                </div>\n\n                <br>\n\n                <div id=\"zipCodeError4\" class=\"alert alert-warning\" role=\"alert\"\n                     *ngIf=\"!(zipCodeInput.untouched) && !(zipCodeInput.value | validZipCode)\">\n                    This zipcode has already been added !\n                </div>\n\n                <div id=\"zipCodeError5\" class=\"alert alert-danger\" role=\"alert\"\n                     *ngIf=\"(zipCodeNotFound$ | async)\">\n                    This zipcode has not been found !!\n                </div>\n\n\n                <button class=\"btn btn-primary btn-rounded text-monospace font-italic font-weight-bolder\"\n                        [disabled]=\"!(zipCodeInput.value | validZipCode) || zipCodeInput.invalid\">\n                    Add location\n                    <i *ngIf=\"loading$ | async\" class=\"fa fa-spinner fa-spin\"></i>\n                </button>\n            </form>\n        </div>\n    </div>\n\n    <br>\n\n    <div class=\"card\">\n        <app-list-location></app-list-location>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {WeatherService} from \"@app/services\";\n\n@Component({\n  selector: 'app-list-location',\n  templateUrl: './list-location.component.html',\n  styleUrls: ['./list-location.component.css']\n})\nexport class ListLocationComponent implements OnInit {\n\n  zipCodes$ = this.weatherService.getZipCodes;\n\n  constructor(private readonly weatherService: WeatherService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container *ngFor=\"let zipCode of zipCodes$ | async\">\n    <app-location [zipCode]=\"zipCode\"></app-location>\n</ng-container>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    API_URL: `https://api.openweathermap.org/data/2.5/`,\n    API_KEY: `5a4b2d457ecbef9eb2a71e480b947604`,\n    ICON_URL: `https://www.angulartraining.com/images/weather/`,\n    NUMBER_OF_DAYS: 5\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export abstract class CacheService {\n    protected getItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n\n    protected setItem(key: string, data: object | string) {\n        (typeof data === 'string') ? localStorage.setItem(key, data) : localStorage.setItem(key, JSON.stringify(data));\n    }\n\n    protected removeItem(key: string) {\n        localStorage.removeItem(key)\n    }\n\n    protected clear() {\n        localStorage.clear()\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ValidZipCodePipe} from './pipes/valid-zip-code.pipe';\nimport {WeatherIconComponent} from './components/weather-icon/weather-icon.component';\nimport {WeatherStatusPipe} from './pipes/weather-status.pipe';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RouterModule} from \"@angular/router\";\n\n@NgModule({\n    declarations: [ValidZipCodePipe, WeatherIconComponent, WeatherStatusPipe],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule\n    ], exports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule,\n        ValidZipCodePipe,\n        WeatherIconComponent,\n        WeatherStatusPipe\n    ]\n})\nexport class SharedModule {\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {delay, finalize} from 'rxjs/operators';\r\nimport {LoadingService} from '@app/services';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private readonly loadingService: LoadingService\r\n  ) {\r\n\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.loadingService.start(req);\r\n    return next.handle(req).pipe(delay(300), finalize(() => this.loadingService.stop(req)));\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'Angular';\n}\n","<router-outlet></router-outlet>","import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class LoadingService {\n\n  private requests: HttpRequest<any>[];\n\n  constructor() {\n    this.isLoading$ = new BehaviorSubject<boolean>(false);\n    this.requests = [];\n  }\n\n  private isLoading$: BehaviorSubject<boolean>;\n\n  get isLoading(): Observable<boolean> {\n    return this.isLoading$.asObservable();\n  }\n\n  start(req: HttpRequest<any>) {\n    this.requests.push(req);\n    this.isLoading$.next(true);\n  }\n\n  stop(req: HttpRequest<any>) {\n    this.requests.splice(this.requests.indexOf(req), 1);\n    if (this.requests.length === 0) {\n      this.isLoading$.next(false);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@environments/environment\";\nimport {CacheService} from \"@app/classes/cache.service\";\nimport {IWeatherData, Location} from \"@shared/models/weather.model.\";\nimport {SkyStatusEnum} from \"@shared/enums/sky-condiction.enum\";\nimport {$enum} from 'ts-enum-util'\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {filter, map, tap} from \"rxjs/operators\";\n\n\n@Injectable()\nexport class WeatherService extends CacheService {\n\n    private readonly localStoragekey;\n    private readonly apiUrl: string;\n    private readonly zipCodes$: BehaviorSubject<Array<string>>;\n    private readonly cachedZipCodes: Array<string>;\n    private readonly zipCodeNotFound$: BehaviorSubject<string>;\n\n    constructor(private readonly http: HttpClient) {\n        super();\n\n        this.localStoragekey = 'ZIPCODES';\n        this.apiUrl = environment.API_URL;\n        this.zipCodes$ = new BehaviorSubject<Array<string>>([]);\n        this.cachedZipCodes = this.getItem(this.localStoragekey)?.split(',') ?? [];\n        this.zipCodes$.next(this.cachedZipCodes);\n        this.zipCodeNotFound$ = new BehaviorSubject<string>(null);\n    }\n\n    get getZipCodes(): Observable<string[]> {\n        return this.zipCodes$.asObservable();\n    }\n\n    get getZipCodesValue(): string[] {\n        return this.zipCodes$.value;\n    }\n\n    get getZipCodeNotFound(): Observable<string> {\n        return this.zipCodeNotFound$.asObservable();\n    }\n\n    removeZipCode(zipcode: string) {\n        this.cachedZipCodes.splice(this.cachedZipCodes.indexOf(zipcode), 1);\n        this.setItem(this.localStoragekey, this.cachedZipCodes.toString());\n        this.zipCodes$.next(this.cachedZipCodes);\n    }\n\n    setZipCodeNotFound(error?: string) {\n        this.zipCodeNotFound$.next(error);\n    }\n\n    checkDuplicateZipCode(zipCode: string): boolean {\n        return this.cachedZipCodes.indexOf(zipCode) === -1;\n    }\n\n    addZipCode(zipCode: string): void {\n        this.cachedZipCodes.push(zipCode);\n        this.setItem(this.localStoragekey, this.cachedZipCodes.toString());\n        this.zipCodes$.next(this.cachedZipCodes);\n    }\n\n    getLocationByZipCode(zipCode: string): Observable<Location> {\n        const url = `${this.apiUrl}weather?zip=${zipCode},us&appid=${environment.API_KEY}`;\n        return this.http.get<IWeatherData>(url)\n            .pipe(\n                filter(({weather}: IWeatherData) => !!weather),\n                map(({weather, main, name}: IWeatherData) =>\n                    ({\n                        name: name,\n                        skyCondiction: $enum(SkyStatusEnum).asValueOrDefault(weather[0].main.toLocaleLowerCase(), SkyStatusEnum.DEFAuLT),\n                        currentTemp: main.temp,\n                        minTemp: main.temp_min,\n                        maxTemp: main.temp_max\n                    }) as unknown as Location\n                ),\n                tap(() => this.zipCodeNotFound$.next(null)),\n            );\n    }\n\n}\n","import {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {CoreModule} from \"@app/core.module\";\n\n@NgModule({\n    imports:\n        [\n            BrowserModule,\n            CoreModule,\n            AppRoutingModule\n        ],\n    declarations:\n        [\n            AppComponent,\n        ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SkyStatusEnum} from \"@shared/enums/sky-condiction.enum\";\nimport {environment} from \"@environments/environment\";\n\n@Component({\n    selector: 'app-weather-icon',\n    templateUrl: './weather-icon.component.html',\n    styleUrls: ['./weather-icon.component.css']\n})\nexport class WeatherIconComponent implements OnInit {\n\n    @Input() skyCondition: SkyStatusEnum;\n    @Input() icon: boolean;\n    imageSrc: string;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.imageSrc = `${environment.ICON_URL}${this.skyCondition}.png`;\n    }\n}\n","<img [class.icon]=\"icon\" [src]=\"imageSrc\" alt=\"not_found\">\n","export * from './loading.service';\r\nexport * from './weather.service';\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Location} from \"@shared/models/weather.model.\";\nimport {WeatherService} from \"@app/services\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-location',\n    templateUrl: './location.component.html',\n    styleUrls: ['./location.component.css']\n})\nexport class LocationComponent implements OnInit {\n\n\n    @Input() zipCode: string;\n    data: Location;\n\n    constructor(private readonly weatherService: WeatherService) {\n    }\n\n    ngOnInit(): void {\n        this.weatherService.getLocationByZipCode(this.zipCode)\n            .subscribe(\n                (data: Location) => this.data = data,\n                (error: HttpErrorResponse) => {\n                        this.weatherService.setZipCodeNotFound(error.message);\n                        setTimeout(() => this.weatherService.setZipCodeNotFound(), 2000);\n                }\n            );\n\n        const t = this.weatherService.getZipCodesValue;\n        console.log(t);\n    }\n\n    removeLocation() {\n        this.weatherService.removeZipCode(this.zipCode);\n    }\n}\n","<div *ngIf=\"data\" class=\"container\">\n    <div class=\"well flex\">\n        <div>\n            <h3>{{data.name}} ({{zipCode}})</h3>\n            <h4>Current conditions: {{data.skyCondiction | titlecase}}</h4>\n            <h4>Temperatures today:</h4>\n            <p>\n                Current {{ data.currentTemp | number : '1.0-0'}}\n                - Max {{ data.maxTemp | number : '1.0-0'}}\n                - Min {{ data.minTemp | number : '1.0-0'}}\n            </p>\n            <p>\n                <a [routerLink]=\"['/forecast', zipCode]\">Show 5-day forecast for {{ data.name }}</a>\n            </p>\n        </div>\n        <div>\n            <button (click)=\"removeLocation()\" class=\"close\">×</button>\n            <app-weather-icon [icon]=\"false\" [skyCondition]=\"data.skyCondiction | weatherStatus\"></app-weather-icon>\n        </div>\n    </div>\n    <hr>\n</div>\n\n\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {SkyStatusEnum} from \"@shared/enums/sky-condiction.enum\";\n\n@Pipe({\n    name: 'weatherStatus'\n})\nexport class WeatherStatusPipe implements PipeTransform {\n\n    transform(value: string): SkyStatusEnum {\n        switch (value) {\n            case SkyStatusEnum.SUN:\n                return SkyStatusEnum.SUN\n            case SkyStatusEnum.RAIN:\n                return SkyStatusEnum.RAIN\n            case SkyStatusEnum.CLOUDS:\n                return SkyStatusEnum.CLOUDS\n            case SkyStatusEnum.SNOW:\n                return SkyStatusEnum.SNOW\n            case SkyStatusEnum.CLEAR:\n                return SkyStatusEnum.SUN\n            default:\n                return SkyStatusEnum.SUN\n        }\n    }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {WeatherService} from \"@app/services\";\n\n@Pipe({\n    name: 'validZipCode'\n})\nexport class ValidZipCodePipe implements PipeTransform {\n    constructor(private readonly weatherService: WeatherService) {\n    }\n\n    transform(value: string): boolean {\n        return this.weatherService.checkDuplicateZipCode(value);\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {AddLocationComponent} from './components/add-location/add-location.component';\nimport {ListLocationComponent} from './components/list-location/list-location.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {LoadingInterceptor} from \"@app/interceptors/loading.interceptor\";\nimport {WeatherService} from \"@app/services\";\nimport {LoadingService} from \"@app/services\";\nimport {SharedModule} from \"@shared/shared.module\";\nimport {LocationComponent} from './components/list-location/location/location.component';\nimport {CanLoadGuard} from \"@app/guards/can-load.guard\";\n\n\n@NgModule({\n    declarations: [\n        AddLocationComponent,\n        ListLocationComponent,\n        LocationComponent\n    ],\n    imports: [\n        FormsModule, SharedModule\n    ],\n    providers: [\n        WeatherService,\n        LoadingService,\n        CanLoadGuard,\n        {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true}\n    ]\n})\nexport class CoreModule {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AddLocationComponent} from \"@app/components/add-location/add-location.component\";\nimport {CanLoadGuard} from \"@app/guards/can-load.guard\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        component: AddLocationComponent\n    },\n    {\n        path: 'forecast',\n        loadChildren: () => import('./modules/forecast/forecast.module').then(m => m.ForecastModule),\n        canLoad: [CanLoadGuard],\n    },\n    {\n        path: '**',\n        redirectTo: '/'\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export enum SkyStatusEnum {\r\n    SUN = 'sun',\r\n    CLOUDS = 'clouds',\r\n    RAIN = 'rain',\r\n    SNOW = 'snow',\r\n    CLEAR = 'clear',\r\n    THUNDERSTORM = 'thunderstorm',\r\n    MIST = 'mist',\r\n    DEFAuLT = 'sun'\r\n}\r\n"]}