{"version":3,"sources":["webpack:///src/app/modules/forecast/forecast.module.ts","webpack:///src/app/modules/forecast/services/forecast.service.ts","webpack:///src/app/modules/forecast/components/five-day-forecast/five-day-forecast.component.ts","webpack:///src/app/modules/forecast/components/five-day-forecast/five-day-forecast.component.html","webpack:///src/app/modules/forecast/guards/can-activate.guard.ts","webpack:///src/app/modules/forecast/forecast-routing.module.ts"],"names":["ForecastModule","declarations","imports","providers","ForecastService","http","mapToLocation","list","city","map","w","name","skyCondiction","asValueOrDefault","weather","main","toLowerCase","DEFAuLT","currentTemp","temp","min","minTemp","maxTemp","max","date","dt","convertDate","location","Date","getTime","toLocaleString","day","weekday","month","apiUrl","API_URL","locations$","asObservable","zipCode","url","API_KEY","get","pipe","length","locations","next","FiveDayForecastComponent","forecastService","route","router","getLocations","params","id","getFiveDayForecastByZipCode","navigate","subscribe","selector","templateUrl","styleUrls","CanActivateGuard","weatherService","getZipCodesValue","includes","paramMap","routes","path","pathMatch","redirectTo","component","canActivate","ForecastRoutingModule","forChild","exports"],"mappings":"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","file":"modules-forecast-forecast-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {FiveDayForecastComponent} from './components/five-day-forecast/five-day-forecast.component';\nimport {ForecastRoutingModule} from \"./forecast-routing.module\";\nimport {SharedModule} from \"@shared/shared.module\";\nimport {ForecastService} from \"./services/forecast.service\";\nimport {CanActivateGuard} from \"./guards/can-activate.guard\";\n\n\n@NgModule({\n    declarations: [FiveDayForecastComponent],\n    imports: [\n        SharedModule,\n        ForecastRoutingModule\n    ], providers: [ForecastService, CanActivateGuard]\n})\nexport class ForecastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@environments/environment\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {ICityInfo, IWeather, IWeatherData, Location} from \"@shared/models/weather.model.\";\nimport {filter, map, tap} from \"rxjs/operators\";\nimport {$enum} from \"ts-enum-util\";\nimport {SkyStatusEnum} from \"@shared/enums/sky-condiction.enum\";\nimport {IForecast} from \"../models/forecast\";\n\n@Injectable()\nexport class ForecastService {\n\n    private readonly apiUrl: string;\n    private readonly locations$: BehaviorSubject<Location[]>;\n\n    constructor(private readonly http: HttpClient) {\n        this.apiUrl = environment.API_URL;\n        this.locations$ = new BehaviorSubject<Location[]>([])\n    }\n\n    get getLocations(): Observable<Location[]> {\n        return this.locations$.asObservable();\n    }\n\n    getFiveDayForecastByZipCode(zipCode: string): Observable<Location[]> {\n        const url = `${this.apiUrl}forecast/daily?cnt=5&zip=${zipCode},us&appid=${environment.API_KEY}`;\n        return this.http.get<IForecast>(url)\n            .pipe(\n                filter(({list}) => !!list.length),\n                map(({list, city}) => this.mapToLocation(list, city)),\n                map((locations: Location[]) => locations.map(this.convertDate)),\n                tap((locations: Location[]) => this.locations$.next(locations))\n            );\n    }\n\n    private mapToLocation = (list: IWeatherData[], city: ICityInfo) =>\n        list.map((w: IWeatherData) => ({\n            name: city.name,\n            skyCondiction: $enum(SkyStatusEnum).asValueOrDefault(w.weather[0].main.toLowerCase(), SkyStatusEnum.DEFAuLT),\n            currentTemp: w.temp.min,\n            minTemp: w.temp.min,\n            maxTemp: w.temp.max,\n            date: w.dt,\n        })) as unknown as Location[]\n\n    private convertDate = (location: Location) =>\n        ({\n            ...location,\n            date: new Date(new Date(location.date).getTime() * 1000).toLocaleString(\"us\", {\n                day: \"2-digit\",\n                weekday: \"long\",\n                month: \"short\",\n            })\n        }) as unknown as Location;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ForecastService} from \"../../services/forecast.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {catchError, filter, switchMap, tap} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-five-day-forecast',\n  templateUrl: './five-day-forecast.component.html',\n  styleUrls: ['./five-day-forecast.component.css']\n})\nexport class FiveDayForecastComponent implements OnInit {\n\n  locations$ = this.forecastService.getLocations;\n\n  constructor(\n      private readonly forecastService: ForecastService,\n      private readonly route: ActivatedRoute,\n      private readonly router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.pipe(\n        filter(params => !!params.id),\n        switchMap(params => this.forecastService.getFiveDayForecastByZipCode(params.id)),\n        catchError(() => this.router.navigate(['/']))\n    ).subscribe();\n  }\n}\n","<h4 class=\"container\">Template for 5-day forecast page:</h4>\n<div class=\"container-fluid container\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">5-day forecast for Rancho Cordova</h3>\n\n        </div>\n        <ul class=\"list-group\">\n\n            <li class=\"list-group-item\" *ngFor='let location of locations$ | async'>\n                {{ location?.date | date:'EEEE, MMM d' }}:\n                {{ location?.skyCondiction | titlecase }}\n                - Min: {{ location?.minTemp | number : '1.0-0' }}\n                - Max: {{ location?.maxTemp | number : '1.0-0' }}\n                <app-weather-icon [icon]=\"true\" [skyCondition]=\"location.skyCondiction | weatherStatus\">\n                </app-weather-icon>\n            </li>\n        </ul>\n    </div>\n    <br>\n    <button [routerLink]=\"['/']\" class=\"btn btn-success\">\n        <i class=\"fa fa-arrow-left fa-arrow\"></i>\n        Back to main page\n    </button>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router} from '@angular/router';\r\nimport {WeatherService} from \"@app/services\";\r\n\r\n@Injectable()\r\nexport class CanActivateGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private readonly weatherService: WeatherService,\r\n        private readonly router: Router\r\n    ) {\r\n    }\r\n\r\n    async canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\r\n        if (this.weatherService.getZipCodesValue.includes(route.paramMap.get('id'))) {\r\n            return true\r\n        } else {\r\n            await this.router.navigate(['/']);\r\n            return false\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {FiveDayForecastComponent} from \"./components/five-day-forecast/five-day-forecast.component\";\r\nimport {CanActivateGuard} from \"./guards/can-activate.guard\";\r\n\r\nconst routes: Routes = [\r\n    {path: '', pathMatch: 'full', redirectTo: '/'},\r\n    {path: ':id', component: FiveDayForecastComponent, canActivate: [CanActivateGuard]}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ForecastRoutingModule {\r\n}\r\n"]}